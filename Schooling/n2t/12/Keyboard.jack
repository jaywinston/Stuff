// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    static int KBD;

    /** Initializes the keyboard. */
    function void init() {
        let KBD = 24576;
        return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        return Memory.peek(KBD);
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
        var int c;

        let c = Keyboard.keyPressed();
        while (c = 0) {
            let c = Keyboard.keyPressed();
        }

        do Memory.poke(KBD, 0);
        do Output.printChar(c);

        return c;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
        var int c, i;
        var Array buf;
        var String s;

        do Output.printString(message);
        let buf = Array.new(512);

        let i = 0;
        let c = Keyboard.readChar();
        while ( (i<512) & ~(c=128) ) {
            if (c = 129) {
                if (i > 0) {
                    let i = i - 1;
                }
            } else {
                let buf[i] = c;
                let i = i + 1;
            }
            let c = Keyboard.readChar();
        }
        let buf[i] = null;

        let s = String.new(i);
        let i = 0;
        while ( (i<512) & ~(buf[i]=null) ) {
            do s.appendChar(buf[i]);
            let i = i + 1;
        }

        do Output.printString(s);

        return s;
    }   

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
        var int c, i, n, neg;
        var Array buf;

        do Output.printString(message);

        let buf = Array.new(7);     /* -32767 with terminator */
        let c = Keyboard.readChar();
        if (c = 45) {
            let buf[0] = c;
            let c = Keyboard.readChar();
            let i = 1;
        } else {
            let i = 0;
        }
        while ( ((i<7) & ~(c=128)) & ((c>47) & (c<58)) ) {
            let buf[i] = c;
            if (c = 129) {
                if (i > 0) {
                    let i = i - 1;
                }
            } else {
                let c = Keyboard.readChar();
                let i = i + 1;
            }
        }

        let buf[i] = -1;

        if (buf[0] = 45) {
            let neg = -1;
            let i = 1;
        } else {
            let neg = 0;
            let i = 0;
        }

        let n = 0;
        while ( ~(buf[i]=-1) ) {
            let n = (n*10) + (buf[i]-48);
            let i = i + 1;
        }

        if (neg) {
            let n = -n;
        }

        return n;
    }
}
