class Vector {

    static Array SINTAB;  /* see init below */

    field int re, im;


    constructor Vector new() {
        return this;
    }


    method Vector calculate(int m, int a) {
        let re = (m*Vector.cos(a)) / 100;
        let im = (m*Vector.sin(a)) / 100;
        return this;
    }


    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }


    method int re() {
        return re;
    }


    method int im() {
        return im;
    }


    /* These functions return trigonometric values multiplied by 100.
     * The idea is to use the value and then divide by 100.  This is
     * close enough for my needs here.  Vector.init() must be called
     * once before use.
     */
    function int sin(int a) {
        var boolean neg;

        if (Math.abs(a) > 360) {
            let a = Vector.mod(a, 360);
        }

        if (a < 0) {
            let a = 360 + a;
        }

        let neg = a > 180;

        if (neg) {
            let a = Vector.mod(a, 180);
        }

        if (a > 90) {
            let a = 90 - (Vector.mod(a-1, 90)+1);
        }

        if (neg) {
            return -SINTAB[a];
        }

        return SINTAB[a];
    }


    function int cos(int a) {
        return Vector.sin(a+90);
    }


    function int mod(int n, int d) {
        var int q;

        let q = n / d;

        return n - (q*d);
    }


    function void init() {
        let SINTAB = Array.new(91);

        let SINTAB[0] = 0; let SINTAB[1] = 2; let SINTAB[2] = 3;
        let SINTAB[3] = 5; let SINTAB[4] = 7; let SINTAB[5] = 9;
        let SINTAB[6] = 10; let SINTAB[7] = 12; let SINTAB[8] = 14;
        let SINTAB[9] = 16; let SINTAB[10] = 17; let SINTAB[11] = 19;
        let SINTAB[12] = 21; let SINTAB[13] = 22; let SINTAB[14] = 24;
        let SINTAB[15] = 26; let SINTAB[16] = 28; let SINTAB[17] = 29;
        let SINTAB[18] = 31; let SINTAB[19] = 33; let SINTAB[20] = 34;
        let SINTAB[21] = 36; let SINTAB[22] = 37; let SINTAB[23] = 39;
        let SINTAB[24] = 41; let SINTAB[25] = 42; let SINTAB[26] = 44;
        let SINTAB[27] = 45; let SINTAB[28] = 47; let SINTAB[29] = 48;
        let SINTAB[30] = 50; let SINTAB[31] = 52; let SINTAB[32] = 53;
        let SINTAB[33] = 54; let SINTAB[34] = 56; let SINTAB[35] = 57;
        let SINTAB[36] = 59; let SINTAB[37] = 60; let SINTAB[38] = 62;
        let SINTAB[39] = 63; let SINTAB[40] = 64; let SINTAB[41] = 66;
        let SINTAB[42] = 67; let SINTAB[43] = 68; let SINTAB[44] = 69;
        let SINTAB[45] = 71; let SINTAB[46] = 72; let SINTAB[47] = 73;
        let SINTAB[48] = 74; let SINTAB[49] = 75; let SINTAB[50] = 77;
        let SINTAB[51] = 78; let SINTAB[52] = 79; let SINTAB[53] = 80;
        let SINTAB[54] = 81; let SINTAB[55] = 82; let SINTAB[56] = 83;
        let SINTAB[57] = 84; let SINTAB[58] = 85; let SINTAB[59] = 86;
        let SINTAB[60] = 87; let SINTAB[61] = 87; let SINTAB[62] = 88;
        let SINTAB[63] = 89; let SINTAB[64] = 90; let SINTAB[65] = 91;
        let SINTAB[66] = 91; let SINTAB[67] = 92; let SINTAB[68] = 93;
        let SINTAB[69] = 93; let SINTAB[70] = 94; let SINTAB[71] = 95;
        let SINTAB[72] = 95; let SINTAB[73] = 96; let SINTAB[74] = 96;
        let SINTAB[75] = 97; let SINTAB[76] = 97; let SINTAB[77] = 97;
        let SINTAB[78] = 98; let SINTAB[79] = 98; let SINTAB[80] = 98;
        let SINTAB[81] = 99; let SINTAB[82] = 99; let SINTAB[83] = 99;
        let SINTAB[84] = 99; let SINTAB[85] = 100; let SINTAB[86] = 100;
        let SINTAB[87] = 100; let SINTAB[88] = 100; let SINTAB[89] = 100;
        let SINTAB[90] = 100;

        return;
    }


    function void kill() {
        do SINTAB.dispose();
        return;
    }

}
