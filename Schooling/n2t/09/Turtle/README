Grammar:

cmdline:
    assgn
    arglist

assgn:
    name '=' word

name:
    namstart
    namstart namend

namstart:
    (?![ ={}()"+*/%[:digit:]-])[[:graph:]]

namend:
    namchar
    namchar namend

namchar:
    (?![ ={}()"+*/%-])[[:graph:]]

word:
    expression
    block

expression:
    stringexpr
    name
    logicexpr

stringexpr:
    '"' text '"'

text:
    textchar
    textchar text

textchar:
    (?![%"])[[:graph:]]
    formatseq

formatseq:
    '%' formatspec

formatspec:
    'N' 'P' 'Q'

logicexpr:
    equality
    equality logop logicexpr

equalityexpr:
    addexpr
    addexpr eqop equality

addexpr:
    mulexpr
    mulexpr addop addexpr

mulexpr:
    atom
    atom mulop mulexpr

atom:
    name
    intatom
    parenatom
    block

intatom:
    intchar
    intchar intatom

intchar:
    [[:digit:]]

parenatom:
    '(' logicexpr ')

block:
    '{' cmdlist '}

cmdlist:
    cmdlin
    cmdlin 'newline' cmdlist

logop:
    '&' '|'

eqop:
    '==' '!=' '<' '>' '<=' '>='

addop:
    '+' '-'

mulop:
    '*' '/' '%'

arglist:
    word
    word space arglist

space:
    'blank'
    'blank' space

