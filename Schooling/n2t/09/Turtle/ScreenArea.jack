class ScreenArea {

    field int aLen, height, width;
    field Array words;
    static Array orig;

    /** w and h are in pixels. */
    constructor ScreenArea new(int w, int h) {

        let width = (w/16) + 1;
        let height = h;
        let aLen = (width*height) * 2;
        let orig = 16384;
        let words = Array.new(aLen);

        return this;
    }

    method void dispose() {

        do words.dispose();
        do Memory.deAlloc(this);

        return;
    }


    /** copy aLen words, starting from (x, y) */
    method int copy(int x, int y) {
        var int i;
        var int h, w;
        var int base, row;
        var Word word;

        let base = (x/16) + (y*32);
        let h = 0;
        let i = 0;
        while (h < height) {
            let row = base + (h*32);
            let w = 0;
            while (w < width) {
                let words[i] = orig + (row+w);
                let words[i+1] = orig[row+w];
                let i = i + 2;
                let w = w + 1;
            }
            let h = h + 1;
        }

        return i;
    }

    method int restore() {
        var int i;
        var Array a;

        let a = 0;
        let i = 0;
        while (i < aLen) {
            let a[words[i]] = words[i+1];
            let i = i + 2;
        }

        return i;
    }

}
