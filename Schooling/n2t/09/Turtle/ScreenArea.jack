class ScreenArea {

    field int alen, height, width;
    field Array orig, words;

    constructor ScreenArea new(int w, int h) {
        var int i;

        let width = (w/16) + 1;
        let height = h;
        let alen = width * height;
        let orig = 16384;
        let words = Array.new(alen);
        let i = 0;
        while (i < alen) {
            let words[i] = Word.new(0, 0);
            let i = i + 1;
        }

        return this;
    }

    method void dispose() {
        var int i;
        var Word w;

        let i = 0;
        while (i < alen) {
            let w = words[i];
            do w.dispose();
            let i = i + 1;
        }
        do words.dispose();

        do Memory.deAlloc(this);

        return;
    }

    method void clear() {
        return;
    }

    method int copy(int x, int y) {
        var int i;
        var int h, w;
        var int base, off;
        var Word word;

        let base = (x/16) + (y*32);
        let h = 0;
        let i = 0;
        while (h < height) {
            let off = base + (h*32);
            let w = 0;
            while (w < width) {
                let word = words[i];
                let i = i + 1;
                do word.setAddress(orig+(off+w));
                do word.setValue(orig[off+w]);
                let w = w + 1;
            }
            let h = h + 1;
        }

        return i;
    }

    method int restore() {
        var Word w;
        var Array a;
        var int n;

        let a = 0;
        let n = 0;
        while (n < alen) {
            let w = words[n];
            let a[w.address()] = w.value();
            let n = n + 1;
        }

        return n;
    }
}
