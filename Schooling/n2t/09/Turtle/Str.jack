class Str {

    function void cpy(String s, String t) {
        var int i, sLen;

        let sLen = s.length();
        if (sLen > t.length()) {
            /* todo: abort */
            return;
        }

        while (t.length() < 0) {
            do t.eraseLastChar();
        }

        let i = 0;
        while (i < sLen) {
            do t.appendChar(s.charAt(i));
            let i = i + 1;
        }

        return;
    }

    function boolean eq(String s, String t) {
        var int i;
        var int sLen, tLen;

        let sLen = s.length();
        let tLen = t.length();
        let i = 0;
        while ( (i<sLen) & (i<tLen) ) {
            if (~(s.charAt(i) = t.charAt(i))) {
                return false;
            }
            let i = i + 1;
        }

        if ( (i<sLen) | (i<tLen)) {
            return false;
        }

        return true;
    }

    function String dup(String s) {
        var int i, len;
        var String t;

        let len = s.length();
        let t = String.new(len);
        let i = 0;
        while (i < len) {
            do t.appendChar(s.charAt(i));
            let i = i + 1;
        }

        return t;
    }

    /** return token from s, up to and including delimiter from list */
    function String tkn(String s, String list) {
        var int i, j;
        var int sLen, listLen;
        var boolean continue;
        var String t;

        let sLen = s.length();
        let listLen = list.length();
        let t = String.new(sLen);
        let continue = true;
        let i = 0;
        while ( (i<sLen) & continue ) {
            let j = 0;
            while ( (j<listLen) & continue ) {
                let continue = ~(s.charAt(i) = list.charAt(j));
                let j = j + 1;
            }
            do t.appendChar(s.charAt(i));
            let i = i + 1;
        }

        let j = 0;
        while ((j+i) < sLen) {
            do s.setCharAt(j, s.charAt(j+i));
            let j = j + 1;
        }

        while (i > 0) {
            do s.eraseLastChar();
            let i = i - 1;
        }

        return t;
    }

}
