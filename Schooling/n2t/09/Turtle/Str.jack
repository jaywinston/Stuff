class Str {


    function int MAXLEN() {
        return 64;
    }


    function String format(String f, Array arg) {
        var boolean continue;
        var char c;
        var int a, i, j, fLen, tLen;
        var String s, t;

        let fLen = f.length();

        if (fLen < 2) {
            return Str.dup(f);
        }

        let s = String.new(Str.MAXLEN());
        let t = null;

        let a = 0;
        let i = 0;
        while (i < fLen) {

            let c = f.charAt(i);
            let continue = ~(c = 37);
            let i = i + 1;
            while ( (i<fLen) & continue ) {
                do s.appendChar(c);
                let c = f.charAt(i);
                let continue = ~(c = 37);
                let i = i + 1;
            }

            if (i < fLen) {

                let c = f.charAt(i);

                if (c = 68) {
                    let t = String.new(6);
                    do t.setInt(arg[a]);
                } else { if (c = 83) {
                    let t = arg[a];
                } else { if (c = 80) {
                    if (i < Str.MAXLEN()) {
                        do s.appendChar(37);
                    }
                } else { if (c = 81) {
                    if (i < Str.MAXLEN()) {
                        do s.appendChar(34);
                    }
                } else { if (c = 78) {
                    if (i < Str.MAXLEN()) {
                        do s.appendChar(128);
                    }
                }}}}}

                if (~(t = null)) {
                    do Str.cat(s, t);
                    do t.dispose();
                    let t = null;
                    let a = a + 1;
                }

            } else {
                do s.appendChar(c);
            }

            let i = i + 1;
        }

        return s;
    }


    function int cat(String s, String t) {
        var int i;

        let i = 0;
        while (i < t.length()) {
            do s.appendChar(t.charAt(i));
            let i = i + 1;
        }

        return i + s.length();
    }


    function boolean eq(String s, String t) {
        var int i;
        var int sLen, tLen;

        let sLen = s.length();
        let tLen = t.length();
        let i = 0;
        while ( (i<sLen) & (i<tLen) ) {
            if (~(s.charAt(i) = t.charAt(i))) {
                return false;
            }
            let i = i + 1;
        }

        if ( (i<sLen) | (i<tLen)) {
            return false;
        }

        return true;
    }


    function String dup(String s) {
        var int i, len;
        var String t;

        let len = s.length();
        let t = String.new(len);
        let i = 0;

        while (i < len) {
            do t.appendChar(s.charAt(i));
            let i = i + 1;
        }

        return t;
    }


    function int index(String s, String list, int i) {
        var char c;
        var int j;
        var int sLen, listLen;

        let sLen = s.length();
        let listLen = list.length();

        while (i < sLen) {
            let c = s.charAt(i);
            let j = 0;
            while (j < listLen) {
                if (c = list.charAt(j)) {
                    return i;
                }
                let j = j + 1;
            }
            let i = i + 1;
        }

        return i;
    }


    function int tkn(String s, String t, String list, int i) {
        var int j;

        let j = i;

        if (list = null) {
            let i = s.length();
        } else {
            let i = Str.index(s, list, i);
        }

        while (j < i) {
            do t.appendChar(s.charAt(j));
            let j = j + 1;
        }

        return i;
    }


    function void shift(String s, int off, int i) {

        if ( (s.length()=0) | (s.length()<off) ) {
            return;
        }

        let i = i + off;
        while (i < s.length()) {
            do s.setCharAt(i-off, s.charAt(i));
            let i = i + 1;
        }

        while (off > 0) {
            do s.eraseLastChar();
            let off = off - 1;
        }

        return;
    }


    function int lskip(String s, char c, int i) {

        while (i < s.length()) {
            if (~(s.charAt(i) = c)) {
                return i;
            }
            let i = i + 1;
        }

        return i;
    }


    function void rstrip(String s, char c) {

        while (s.length() > 0) {
            if (~(s.charAt(s.length()-1) = c)) {
                return;
            }
            do s.eraseLastChar();
        }

        return;
    }
       
}
