class Str {


    function int MAXLEN() {
        return 64;  /* magic number! */
    }


    function boolean eq(String s, String t) {
        var int i, len;

        if (s = t) {
            return true;
        }

        if ( (s=null) | (t=null) ) {
            return false;
        }

        let len = s.length();

        if (~(len = t.length())) {
            return false;
        }

        let i = 0;
        while (i < len) {
            if (~(s.charAt(i) = t.charAt(i))) {
                return false;
            }
            let i = i + 1;
        }

        return true;
    }


    /** dangerous */
    function String format(String f, Array arg) {
        var boolean continue;
        var char c;
        var int a, i, j;
        var int fLen, len;
        var String s, t;

        let fLen = f.length();

        if (fLen < 2) {
            return Str.dup(f);
        }

        let len = Str.MAXLEN();
        let s = String.new(len);
        let t = null;

        let a = 0;
        let i = 0;
        while (i < fLen) {

            let c = f.charAt(i);
            let continue = ~(c = 37);

            let i = i + 1;
            while ( (i<fLen) & continue ) {
                do s.appendChar(c);
                let c = f.charAt(i);
                let continue = ~(c = 37);
                let i = i + 1;
            }

            if (i < fLen) {  // c == '%'

                let c = f.charAt(i);  // the format directive

                if (c = 68) {
                    let t = String.new(6);
                    do t.setInt(arg[a]);
                } else { if (c = 83) {
                    let t = Str.dup(arg[a]);
                } else { if (c = 67) {
                    do s.appendChar(arg[a]);
                    let a = a + 1;
                } else { if (i < len) {
                    do s.appendChar(c);
                }}}}

                if (~(t = null)) {
                    // ? if ( ~(s.length()+t.length()) < len ) {
                    if (~( (s.length()+t.length()) < len) ) {
                        let len = (len+Str.MAXLEN()) + t.length();
                        let s = Str.realloc(s, len);
                    }
                    do Str.cat(s, t);
                    do t.dispose();
                    let t = null;
                    let a = a + 1;
                }

                let i = i + 1;

            } else {
                // again with that!? if ( ~(s.length()+1) < len ) {
                if (~( (s.length()+1) < len) ) {
                    let len = len + Str.MAXLEN();
                    let s = Str.realloc(s, len);
                }
                do s.appendChar(c);
            }
        }

        return s;
    }


    function String realloc(String s, int l) {
        var String t;

        let t = String.new(l);
        do Str.cat(t, s);
        do s.dispose();

        return t;
    }


    /** dangerous, what is s.maxLen? */
    function int cat(String s, String t) {
        var int i, tLen;

        let i = 0;
        let tLen = t.length();
        while (i < tLen) {
            do s.appendChar(t.charAt(i));
            let i = i + 1;
        }

        return s.length();
    }


    function String dup(String s) {
        var int i;
        var String t;

        if (s = null) {
            return null;
        }

        let t = String.new(s.length());
        let i = 0;

        while (i < s.length()) {
            do t.appendChar(s.charAt(i));
            let i = i + 1;
        }

        return t;
    }


    function void shift(String s, int off, int i) {

        if ( (s.length()=0) | (s.length()<off) ) {
            return;
        }

        let i = i + off;
        while (i < s.length()) {
            do s.setCharAt(i-off, s.charAt(i));
            let i = i + 1;
        }

        while (off > 0) {
            do s.eraseLastChar();
            let off = off - 1;
        }

        return;
    }


    function int skip(String s, char c, int i) {

        if (i < 0) {
            return i;
        }

        while (i < s.length()) {
            if (~(s.charAt(i) = c)) {
                return i;
            }
            let i = i + 1;
        }

        return i;
    }

}
