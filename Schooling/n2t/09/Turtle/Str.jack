class Str {

    static int _maxlen;
    static String _nulls;

    function void init() {
        let _maxlen = 50;
        let _nulls = "";
        return;
    }

    function int MAXLEN() {
        return _maxlen;
    }

    function String NULLS() {
        return _nulls;
    }

    /* todo: 2nd arg array */
    function String format(String f, int arg) {
        var boolean continue;
        var char c;
        var int i, j, fLen, tLen;
        var String s, t;

        let fLen = f.length();

        if (fLen < 2) {
            return Str.dup(f);
        }

        let s = String.new(_maxlen);

        let i = 0;
        while (i < fLen) {
            let c = f.charAt(i);
            let continue = ~(c = 37);
            let i = i + 1;
            while ( (i<fLen) & continue ) {
                do s.appendChar(c);
                let c = f.charAt(i);
                let continue = ~(c = 37);
                let i = i + 1;
            }
            if (i < fLen) {
                let c = f.charAt(i);
                if (c = 100) {
                    let t = String.new(6);
                    do t.setInt(arg);
                } else { if (c = 115) {
                    let t = arg;
                } else { if (c = 37) {
                    if (i < _maxlen) {
                        do s.appendChar(c);
                    }
                }}}
                let tLen = t.length();  // dangerous!
                let j = 0;
                while (j < tLen) {
                    do s.appendChar(t.charAt(j));
                    let j = j + 1;
                }
            } else {
                do s.appendChar(c);
            }
            let i = i + 1;
        }

        return s;
    }

    function String cat(String s, String t) {
        var String new;

        let new = String.new(s.length() + t.length());
        do Str.cpy(s, new);
        do Str.cpy(t, new);
        return new;
    }

    function void truncate(String s) {
        var int len;

        let len = s.length();
        while (len > 0) {
            do s.eraseLastChar();
            let len = len - 1;
        }

        return;
    }

    function void cpy(String s, String t) {
        var int i, sLen;

        let sLen = s.length();
        if (sLen > t.length()) {
            /* todo: abort */
            return;
        }

        let i = 0;
        while (i < sLen) {
            do t.appendChar(s.charAt(i));
            let i = i + 1;
        }

        return;
    }

    function boolean eq(String s, String t) {
        var int i;
        var int sLen, tLen;

        let sLen = s.length();
        let tLen = t.length();
        let i = 0;
        while ( (i<sLen) & (i<tLen) ) {
            if (~(s.charAt(i) = t.charAt(i))) {
                return false;
            }
            let i = i + 1;
        }

        if ( (i<sLen) | (i<tLen)) {
            return false;
        }

        return true;
    }

    function String dup(String s) {
        var int i, len;
        var String t;

        if (s = null) {
            return null;
        }

        let len = s.length();
        let t = String.new(len);
        let i = 0;
        while (i < len) {
            do t.appendChar(s.charAt(i));
            let i = i + 1;
        }

        return t;
    }

    function int index(String s, String list, int i) {
        var char c;
        var int j;
        var int sLen, listLen;

        let sLen = s.length();
        let listLen = list.length();

        while (i < sLen) {
            let c = s.charAt(i);
            let j = 0;
            while (j < listLen) {
                if (c = list.charAt(j)) {
                    return i;
                }
                let j = j + 1;
            }
            let i = i + 1;
        }

        return i;
    }

    function int tkn(String s, String t, String list, int i) {
        var int j;

        let j = i;
        let i = Str.index(s, list, i);
        while (j < i) {
            do t.appendChar(s.charAt(j));
            let j = j + 1;
        }

        return i;
    }

    function int parens(String s, String t, int i) {
        var char c;
        var int prs, sLen;

        let sLen = s.length();
        let c = s.charAt(i);
        let prs = 1;
        while ( (i<sLen) & (prs>0) ) {
            do t.appendChar(c);
            let i = i + 1;
            let c = s.charAt(i);
            if (c = 40) {
                let prs = prs + 1;
            } else { if (c = 41) {
                let prs = prs - 1;
            }}
        }

        if (i = sLen) {
            if (~(prs = 0)) {
                return -prs;
            }
            return i;
        }

        return i + 1;
    }

    function void shift(String s, int off) {
        var int i, sLen;

        let sLen = s.length();
        let i = off;
        while (i < sLen) {
            do s.setCharAt(i-off, s.charAt(i));
            let i = i + 1;
        }

        while (off > 0) {
            do s.eraseLastChar();
            let off = off - 1;
        }

        return;
    }
}
