// make 1 "won't go backwards" and 2 "target beyond boundary"
class Error {

    static int e, nmsg;
    static int TABSIZE;
    static Array ERRTAB;

    function void init(Array tab, int ts) {
        let e = 1;
        let nmsg = 0;
        let TABSIZE = ts;
        let ERRTAB = tab;
        let ERRTAB[0] = Array.new(1);
        return;
    }

    function void dispose() {
        var int i;
        var String s;

        let s = ERRTAB[0];
        if (~(s = null)) {
            do s.dispose();
        }

        let i = 1;
        while (i < TABSIZE) {
            let s = ERRTAB[i];
            do s.dispose();
            let i = i + 1;
        }

        do ERRTAB.dispose();

        return;
    }

    function void set(int i) {
        var Array a;

        if (~(i < TABSIZE)) {
            //let a = Array.new(1);
            //let a[0] = "no such error";
            //do Error.send(a, 1);
            do Error.send("no such error");
            do Error.set(0);
            return;
        }

        let e = -i;

        return;
    }

    function boolean isSet() {
        return e < 1;
    }

    function String message() {
        var String s;

        let s = ERRTAB[-e];

        if (e = 0) {
            let e = 1;
            do Error.clear();
            let ERRTAB[0] = null;
        } else {
            if (ERRTAB[0] = null) {
                let e = 1;
            } else {
                let e = 0;
            }
        }

        return s;
    }

function void send(String s) {
let ERRTAB[0]=s;
let e = 0;
return;
}

function void clear() {
var String s;
let s=ERRTAB[0];
do s.dispose();
let ERRTAB[0]=null;
return;
}

    function void _send(Array a, int nm) {

        let ERRTAB[0] = a;
        let nmsg = nm;

        return;
    }

    function void _clear() {
        var int i;
        var Array b;
        var String s;

        let b = ERRTAB[0];
        let i = 0;
        while (i < nmsg) {
            let s = b[i];
            do s.dispose();
            let i = i + 1;
        }
        do b.dispose();

        return;
    }

}
