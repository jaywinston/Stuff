/* Depends on Str.jack */

class Symbol {

    field int _meta, _data;
    field String _name;
    field Symbol _next;

    constructor Symbol new(String name, int meta, int data) {
        let _name = name;
        let _meta = meta;
        let _data = data;
        let _next = null;
        return this;
    }

    method void dispose() {
        var String s;

        let s = _name;
        if (~(s = null)) {
            do s.dispose();
        }

        do Memory.deAlloc(this);

        return;
    }

    method int name() {
        return _name;
    }

    method int meta() {
        return _meta;
    }

    method int data() {
        return _data;
    }

    method int next() {
        return _next;
    }

    method void setName(int name) {
        let _name = name;
        return;
    }

    method void setMeta(int meta) {
        let _meta = meta;
        return;
    }

    method void setData(int data) {
        let _data = data;
        return;
    }

    method void setNext(int next) {
        let _next = next;
        return;
    }

    method void append(Symbol o) {
        var Symbol p;

        let p = this;
        while (~(p.next() = null)) {
            let p = p.next();
        }

        do p.setNext(o);

        return;
    }

}
