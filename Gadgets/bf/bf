#!/usr/bin/python3

import sys
import termios

src = sys.stdin.read()
sys.stdin = open('/dev/tty')
i = 0
b = [0]
bp = 0
s = []
DB = '-d' in sys.argv
termattrs = termios.tcgetattr(sys.stdin.fileno())


def fail(m):
    lines = src[:i].split('\n')
    line = len(lines)
    col = i + 1 if line == 1 else i - len(' '.join(lines[:-1]))  # improve this
    raise RuntimeError(f'{m}\nline {line}, column {col}')


def left():
    global bp
    if bp == 0:
        b.insert(0, 0)
    else:
        bp -= 1


def right():
    global bp
    bp += 1
    if bp == len(b):
        b.append(0)


def up():
    b[bp] += 1


def down():
    b[bp] -= 1


def decide():
    global i
    if b[bp]:
        s.append(i - 1)
    else:
        p = i
        n = 1
        while n:
            i += 1
            if i == len(src):
                i = p
                fail('unmatched [')
            elif src[i] == '[':
                n += 1
            elif src[i] == ']':
                n -= 1


def repeat():
    global i
    if not s:
        fail('unmatched ]')
    i = s.pop()


def get():
    b[bp] = ord(sys.stdin.read(1))


def put():
    sys.stdout.write(chr(b[bp])
                     if 32 <= b[bp] < 127 or 9 <= b[bp] <= 13
                     else 'Â·')
    sys.stdout.flush()


def do():
    {
        '<': left,
        '>': right,
        '+': up,
        '-': down,
        '[': decide,
        ']': repeat,
        ',': get,
        '.': put,
        '?': lambda: DB and print(b),
        '!': lambda: DB and exit(),
    }.get(src[i], lambda: None)()


def advance():
    global i
    i += 1


def main():
    while i < len(src):
        do()
        advance()


try:
    termios.tcsetattr(
        sys.stdin.fileno(),
        termios.TCSADRAIN,
        termattrs[:3] + [termattrs[3] & ~termios.ICANON] + termattrs[4:] )
    main()
except KeyboardInterrupt:
    print()
except RuntimeError as e:
    print(e)
    exit(1)
finally:
    termios.tcsetattr(sys.stdin.fileno(), termios.TCSADRAIN, termattrs)
