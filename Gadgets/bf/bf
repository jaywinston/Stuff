#!/usr/bin/python3

import sys
import termios
import pathlib


try:
    src = ''.join(pathlib.Path(f).read_text()
                  for f in sys.argv[1:] if
                  f != '-d')
    if not src:
        src = sys.stdin.read()
        sys.stdin = open('/dev/tty')
except FileNotFoundError as e:
    print(e)
    exit(1)

i = 0
b = [0]
p = 0
s = []
DB = '-d' in sys.argv


def fail(m, e):
    global r
    r = e
    lines = src[:i].split('\n')
    line = len(lines)
    col = i + 1 if line == 1 else i - len(' '.join(lines[:-1]))  # improve this
    raise RuntimeError(f'{m}\nline {line}, column {col}')


def left():
    global p
    if p == 0:
        b.insert(0, 0)
    else:
        p -= 1


def right():
    global p
    p += 1
    if p == len(b):
        b.append(0)


def up():
    b[p] += 1


def down():
    b[p] -= 1


def decide():
    global i
    if b[p]:
        s.append(i - 1)
    else:
        e = i
        n = 1
        while n:
            i += 1
            if i == len(src):
                i = e
                fail('unmatched [', 2)
            elif src[i] == '[':
                n += 1
            elif src[i] == ']':
                n -= 1


def repeat():
    global i
    if not s:
        fail('unmatched ]', 3)
    i = s.pop()


def get():
    b[p] = ord(sys.stdin.read(1))


def put():
    sys.stdout.write(chr(b[p]))
    sys.stdout.flush()


def do():
    {
        '<': left,
        '>': right,
        '+': up,
        '-': down,
        '[': decide,
        ']': repeat,
        ',': get,
        '.': put,
        '_': lambda: DB and print(' ', end=''),
        '~': lambda: DB and print('\n', end=''),
        '$': lambda: DB and print(src, end=''),
        '@': lambda: DB and print(i, end=''),
        '?': lambda: DB and print(b, end=''),
        '^': lambda: DB and print(p, end=''),
        '*': lambda: DB and print(b[p], end=''),
        '#': lambda: DB and print(len(b), end=''),
        ':': lambda: DB and print(s, end=''),
        '!': lambda: DB and exit(),
    }.get(src[i], lambda: None)()


def advance():
    global i
    i += 1


def main():
    while i < len(src):
        do()
        advance()


try:
    r = 0
    if sys.stdin.isatty():
        termattrs = termios.tcgetattr(sys.stdin.fileno())
        termios.tcsetattr(
            sys.stdin.fileno(),
            termios.TCSADRAIN,
            termattrs[:3] + [termattrs[3] & ~termios.ICANON] + termattrs[4:])
    main()
except KeyboardInterrupt:
    print()
except RuntimeError as e:
    print(e)
finally:
    if sys.stdin.isatty():
        termios.tcsetattr(sys.stdin.fileno(), termios.TCSADRAIN, termattrs)
exit(r)
